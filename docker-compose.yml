# Docker Compose file for TueSearch

version: '3.9'
services:
  ############################################################
  # MySQL models
  ############################################################
  mysql:
    build:
      context: .
      dockerfile: docker/database.Dockerfile
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3306:3306'
    env_file:
      - .mysql.env
    volumes:
      - tuesearch-percona-server:/var/lib/mysql
    networks:
      - mysql_net
  ############################################################
  # Drop the database
  # Only do this in development
  # will be thrown out in production
  ############################################################
  drop_database:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: drop_database
    depends_on:
      - mysql
    restart: 'on-failure'
    command: 'python3 -m scripts.drop_database'
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - mysql_net
  ############################################################
  # Initialize models.
  # Feed the models with initial jobs and initial documents.
  # Will run once.
  ############################################################
  initialize_database:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: initialize_database
    depends_on:
      - drop_database
      - mysql
    restart: 'on-failure'
    command: 'python3 -m scripts.migration'
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - mysql_net
  ############################################################
  # Test.
  # Run pre-commit once.
  ############################################################
  run_pre_commit:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: run_pre_commit
    depends_on:
      - initialize_database
      - mysql
    restart: 'no'
    command: './scripts/pre-commit.sh'
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - mysql_net
  ############################################################
  # Send the crawler.
  # Disabled for now to save resources.
  ############################################################
  crawl:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: crawl
    restart: 'on-failure'
    depends_on:
      - mysql
      - initialize_database
    command: 'python3 -m crawler.main -n 0'
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - mysql_net
  ############################################################
  # Build indexer.
  ############################################################
  build_inverted_index:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: build_inverted_index
    depends_on:
      - mysql
      - initialize_database
    restart: 'on-failure'
    command: 'python3 -m backend.build_inverted_index'
    env_file:
      - .env
    volumes:
      - .:/app
      - tuesearch-models:/opt/tuesearch/data/
    networks:
      - mysql_net
  ############################################################
  # Build rankers.
  ############################################################
  build_ranker:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: build_ranker
    depends_on:
      - mysql
      - initialize_database
      - build_inverted_index
    restart: 'on-failure'
    command: 'python3 -m backend.build_ranker'
    env_file:
      - .env
    volumes:
      - .:/app
      - tuesearch-models:/opt/tuesearch/data/
    networks:
      - mysql_net
  ############################################################
  # Start backend.
  # Persistent process.
  ############################################################
  backend_server:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: backend_server
    ports:
      - '4000:4000'
    depends_on:
      - mysql
      - initialize_database
      - build_inverted_index
      - build_ranker
    restart: 'always'
    command: 'python3 -m backend.app'
    env_file:
      - .env
    volumes:
      - .:/app
      - tuesearch-models:/opt/tuesearch/data/
    networks:
      - mysql_net
  ############################################################
  # Start frontend.
  # Persistent process.
  ############################################################
  frontend_server:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: frontend_server
    depends_on:
      - backend_server
      - mysql
    ports:
      - '5000:5000'
    restart: 'always'
    command: serve -s build -l 4000
    volumes:
      - ./frontend/.env:/app/.env
    networks:
      - mysql_net

volumes:
  tuesearch-percona-server:
  tuesearch-models:
networks:
  mysql_net:
