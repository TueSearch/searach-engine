# Docker Compose file for TueSearch

version: '3.9'
services:
  ############################################################
  # Redis Server for distributed lock
  ############################################################
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      prod_mysql_net:
        ipv4_address: 172.20.0.13
  ############################################################
  # MySQL models
  ############################################################
  mysql:
    build:
      context: .
      dockerfile: docker/database.Dockerfile
    container_name: mysql
    restart: unless-stopped
    ports:
      - '3306:3306'
    env_file:
      - .env
    volumes:
      - tuesearch-percona-server:/var/lib/mysql
      - ./docker/my.cnf:/etc/mysql/my.cnf:ro # Mount project's MySQL configuration file
      - ./docker/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro # Mount project's MySQL configuration file
    networks:
      - mysql_net
  ############################################################
  # Initialize models.
  # Feed the models with initial jobs and initial documents.
  # Will run once.
  ############################################################
  initialize_database:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: initialize_database
    restart: 'on-failure'
    command: 'python3 -m scripts.initialize_database'
    env_file:
      - .env
    networks:
      - mysql_net
  ############################################################
  # Test.
  # Run tests
  ############################################################
  run_unit_tests:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: run_unit_tests
    restart: 'no'
    command: './scripts/run-tests.sh'
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - mysql_net
  ############################################################
  # Start manager.
  ############################################################
  manager:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: manager
    restart: 'always'
    command: 'python3 -m crawler.manager.main'
    ports:
      - '6000:6000'
    env_file:
      - .env
    networks:
      - mysql_net
  ############################################################
  # Start the worker.
  ############################################################
  worker:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    restart: 'on-failure'
    command: 'python3 -m crawler.worker.main -n 4'
    env_file:
      - .env
    networks:
      - mysql_net
  ############################################################
  # Start the worker in loop.
  ############################################################
  loop_worker:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    restart: 'on-failure'
    command: 'python3 -m crawler.worker.main'
    env_file:
      - .env
    networks:
      - mysql_net
  ############################################################
  # Build indexer.
  ############################################################
  build_index:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: build_index
    restart: 'on-failure'
    command: 'python3 -m backend.build_index'
    env_file:
      - .env
    volumes:
      - tuesearch:/opt/tuesearch
    networks:
      - mysql_net
  ############################################################
  # Build metrics.
  ############################################################
  build_metrics:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: build_metrics
    restart: 'on-failure'
    command: 'python3 -m backend.build_metrics'
    env_file:
      - .env
    volumes:
      - tuesearch:/opt/tuesearch
    networks:
      - mysql_net
  ############################################################
  # Start backend.
  # Persistent process.
  ############################################################
  backend_server:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: backend_server
    ports:
      - '4000:4000'
    depends_on:
      - mysql
    restart: 'always'
    command: 'python3 -m backend.app'
    env_file:
      - .env
    volumes:
      - tuesearch:/opt/tuesearch
    networks:
      - mysql_net
  ############################################################
  # Start backend.
  # Persistent process.
  ############################################################
  backend_mockup_server:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: backend_mockup_server
    ports:
      - '4001:4001'
    restart: 'always'
    command: 'python3 -m scripts.mockup_server'
  ############################################################
  # Start frontend.
  # Persistent process.
  ############################################################
  frontend_server:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: frontend_server
    depends_on:
      - backend_server
      - mysql
    ports:
      - '5000:5000'
    restart: 'always'
    command: serve -s build -l 5000
    env_file:
      - frontend/.env
    networks:
      - mysql_net
volumes:
  tuesearch-percona-server:
  tuesearch:
networks:
  mysql_net:
